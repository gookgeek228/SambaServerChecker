<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="AppName" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource Light.FillColor.Text.Primary}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="16,0,8,0"/>
        <Setter Property="Padding" Value="0,0,0,2"/>
        <Setter Property="FontFamily" Value="./../../Fonts/#Segoe UI Variable Static Display"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style x:Key="CaptionButton.FocusRect">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="{DynamicResource Light.StrokeColor.FocusStroke.Outer}" Margin="-3" StrokeThickness="3" SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CaptionButton.Close" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Light.FillColor.Subtle.Transparent}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource Light.FillColor.Text.Primary}"/>
        <Setter Property="Width" Value="46"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontFamily" Value="./../../Fonts/#Segoe Fluent Icons"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CaptionButton.FocusRect}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,7,0,0" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Focusable="False" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.Shell.FillColor.CaptionControlCloseFill.Primary}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource Light.Shell.FillColor.CaptionControlCloseText.Primary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.Shell.FillColor.CaptionControlCloseFill.Secondary}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource Light.Shell.FillColor.CaptionControlCloseText.Secondary}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Transparent}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource Light.FillColor.Text.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CaptionButton.MinMax" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Light.FillColor.Subtle.Transparent}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource Light.FillColor.Text.Primary}"/>
        <Setter Property="Width" Value="46"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontFamily" Value="./../../Fonts/#Segoe Fluent Icons"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CaptionButton.FocusRect}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Focusable="False" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Secondary}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource Light.FillColor.Text.Primary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Tertiary}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource Light.FillColor.Text.Secondary}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Transparent}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource Light.FillColor.Text.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Icon" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource Light.FillColor.Text.Primary}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="12,0,0,0"/>
        <Setter Property="FontFamily" Value="./../../Fonts/#Segoe Fluent Icons"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="Group.CaptionControl" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="48"/>
        <Setter Property="CornerRadius" Value="0,7,0,0"/>
    </Style>
    <Style x:Key="Group.IconAndTitle" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="48"/>
        <Setter Property="Padding" Value="4,0,8,0"/>
        <Setter Property="CornerRadius" Value="0,7,0,0"/>
    </Style>
    <Style x:Key="Group.Search" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,8"/>
    </Style>
    <Style x:Key="TitleBar.Surface" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource Light.Background.FillColor.MicaBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Light.StrokeColor.SurfaceStroke}"/>
        <Setter Property="Margin" Value="-1,-1,-1,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="7,7,0,0"/>
    </Style>
</ResourceDictionary>